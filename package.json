{
  "name": "getrewards-backend",
  "version": "0.2.26",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": " NODE_OPTIONS='--max-old-space-size=8192' nest build && npm run sentry:sourcemaps",
    "esbuild": "node compileBundle.mjs",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "nest": "nest",
    "start:dev": " NODE_OPTIONS='--max-old-space-size=8192' nest start --watch",
    "start:local": " NODE_OPTIONS='--max-old-space-size=8192'  IS_OFFLINE=true nest start --watch",
    "start:debug": "nest start --debug --watch",
    "lint": "eslint \"src/**/*.ts\" --fix",
    "lint:ci": "eslint \"src/**/*.ts\"",
    "test": "IS_OFFLINE=true jest --runInBand",
    "test:ci": "docker compose run --rm api-test",
    "pregenerate-api": "ts-node src/swagger/generateSwaggerJson.ts",
    "buildapi": "cp swagger.json ../vaultleap-frontend/api/openapi.json && cd ../vaultleap-frontend/ && npm run openapi-ts",
    "generate-api": "openapi --input swagger.json --output ./getrewards-api/api",
    "sentry:sourcemaps": "sentry-cli sourcemaps inject --org klydo-50 --project node-nestjs ./dist && sentry-cli sourcemaps upload --org klydo-50 --project node-nestjs ./dist"
  },
  "dependencies": {
    "@aws-sdk/client-dynamodb": "^3.830.0",
    "@aws-sdk/client-s3": "^3.627.0",
    "@aws-sdk/s3-request-presigner": "^3.627.0",
    "@bull-board/express": "^6.9.6",
    "@faker-js/faker": "^9.8.0",
    "@KLYDO-io/getrewards-contracts": "1.8.0",
    "@nestjs/axios": "^3.0.2",
    "@nestjs/bullmq": "^11.0.2",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.2",
    "@nestjs/core": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/swagger": "^7.3.1",
    "@nova-odm/annotations": "^0.8.7",
    "@nova-odm/mapper": "^0.8.7",
    "@sentry/cli": "^2.46.0",
    "@sentry/nestjs": "^9.25.0",
    "@sentry/profiling-node": "^9.25.0",
    "@vendia/serverless-express": "^4.12.6",
    "alchemy-sdk": "^3.5.6",
    "bullmq": "^5.53.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "dayjs": "^1.11.13",
    "ethers": "^6.13.1",
    "express-basic-auth": "^1.2.1",
    "express-jwt": "^8.4.1",
    "ioredis": "^5.6.1",
    "jwks-rsa": "^3.0.0",
    "pdfkit": "^0.15.0",
    "request-ip": "^3.3.0",
    "urql": "^4.1.0",
    "uuid": "^10.0.0"
  },
  "devDependencies": {
    "@aws-sdk/client-eventbridge": "^3.600.0",
    "@aws-sdk/client-kms": "^3.600.0",
    "@aws-sdk/client-secrets-manager": "3.441.0",
    "@aws-sdk/client-ses": "^3.622.0",
    "@aws-sdk/client-sfn": "^3.699.0",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.4.1",
    "@types/aws-lambda": "^8.10.138",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/multer": "^1.4.12",
    "@types/node": "^20.3.1",
    "@types/pdfkit": "^0.13.4",
    "@types/request-ip": "^0.0.41",
    "@types/supertest": "^6.0.0",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.21.0",
    "esbuild": "^0.25.5",
    "esbuild-plugin-tsc": "^0.4.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^28.6.0",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-sort-keys-fix": "^1.1.2",
    "eslint-plugin-unicorn": "^53.0.0",
    "jest": "^29.5.0",
    "node-lambda": "^1.3.0",
    "openapi-typescript-codegen": "^0.29.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.1",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
